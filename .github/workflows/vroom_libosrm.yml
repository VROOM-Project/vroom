name: vroom + libosrm
on:
  push:
    branches:
      - master
    tags:
      - v*.*.*
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    paths:
      - '.github/workflows/vroom_libosrm.yml'
      - '**libosrm_wrapper**'
env:
  osrm-ref: d259848456c8c84df0422f7389ef034e63e6462d
jobs:
  libosrm:
    strategy:
      matrix:
        cxx: [g++-13, clang++-17]
        include:
          - cxx: g++-13
            cc: gcc-13
          - cxx: clang++-17
            cc: clang-17
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install libasio-dev libglpk-dev libboost-json1.83-dev
      - name: Cache OSRM
        id: cache
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}/osrm-backend
          key: osrm-${{ env.osrm-ref }}-${{ matrix.cxx }}
      - name: Checkout OSRM repository
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v4
        with:
          repository: Project-OSRM/osrm-backend
          ref: ${{ env.osrm-ref }}
          path: osrm-backend
      - name: Install OSRM dependencies
        run: sudo apt-get install build-essential git cmake pkg-config libbz2-dev libstxxl-dev libstxxl1v5 libxml2-dev libzip-dev libboost-all-dev lua5.2 liblua5.2-dev libtbb-dev libluabind-dev libluabind0.9.1d1
        working-directory: osrm-backend
      - name: Compile OSRM
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          mkdir build
          cd build
          cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_CXX_FLAGS="-Wno-array-bounds" -DCMAKE_CXX_COMPILER=${{ matrix.cxx }} -DCMAKE_C_COMPILER=${{ matrix.cc }}
          cmake --build . -j `nproc`
        working-directory: osrm-backend
      - name: Install OSRM
        run: sudo cmake --build . --target install
        working-directory: osrm-backend/build
      - name: Compile vroom
        run: make -j
        env:
          CXX: ${{ matrix.cxx }}
        working-directory: src
